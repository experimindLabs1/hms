datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id                 Int          @id @default(autoincrement())
  employeeId         String       @unique
  firstName          String
  lastName           String
  email              String       @unique
  position           String
  phone              String?
  gender             String?
  department         String?
  dateOfJoining      DateTime?
  dateOfBirth        DateTime?
  fatherName         String?
  pan                String?
  personalEmail      String?
  residentialAddress String?
  paymentMode        String?
  accountNumber      String?
  accountHolderName  String?
  bankName           String?
  ifsc               String?
  accountType        String?
  baseSalary         Float
  password           String
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  leaveRequests      LeaveRequest[]
  attendance         Attendance[]
}


model Attendance {
  id            String      @id @default(cuid())
  employeeId    Int         // Changed from String to Int to match Employee.id
  date          DateTime
  status        String      // PRESENT, ABSENT, etc.
  type          String?     // REGULAR, LEAVE, etc.
  leaveRequestId Int?       // Changed from String? to Int? to match LeaveRequest.id
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  employee      Employee    @relation(fields: [employeeId], references: [id])
  leaveRequest  LeaveRequest? @relation(fields: [leaveRequestId], references: [id])

  @@unique([employeeId, date])
}

model LeaveRequest {
  id          Int           @id @default(autoincrement())
  employee    Employee      @relation(fields: [employeeId], references: [id])
  employeeId  Int
  reason      String
  status      String        @default("PENDING")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  leaveDates  LeaveDate[]   // Relation to LeaveDate model
  attendance  Attendance[]
}

model LeaveDate {
  id            Int         @id @default(autoincrement())
  date          DateTime
  leaveRequest  LeaveRequest @relation(fields: [leaveRequestId], references: [id], onDelete: Cascade)
  leaveRequestId Int
}

model Payslip {
  id          Int      @id @default(autoincrement())
  employeeId  Int
  month       Int
  year        Int
  basicSalary Float
  grossEarnings Float
  totalDeductions Float
  netPayable  Float
  paidDays    Int
  lopDays     Int    // Loss of Pay days
  payDate     DateTime
  createdAt   DateTime @default(now())
  employee    Employee @relation(fields: [employeeId], references: [id])

  @@unique([employeeId, month, year])
}