datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["tracing"]
}

model Admin {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id                 Int            @id @default(autoincrement())
  employeeId         String         @unique
  firstName          String
  lastName           String
  email              String         @unique
  position           String
  phone              String?
  gender             String?
  department         String?
  dateOfJoining      DateTime?
  dateOfBirth        DateTime?
  fatherName         String?
  pan                String?
  personalEmail      String?
  residentialAddress String?
  paymentMode        String?
  accountNumber      String?
  accountHolderName  String?
  bankName           String?
  ifsc               String?
  accountType        String?
  baseSalary         Float
  password           String
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  leaveRequests      LeaveRequest[]
  attendance         Attendance[]
  canAccessPayslip   Boolean        @default(false)
}

model Attendance {
  id             String        @id @default(cuid())
  employeeId     Int
  date           DateTime
  status         String
  type           String?
  leaveRequestId Int?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  employee       Employee      @relation(fields: [employeeId], references: [id])
  leaveRequest   LeaveRequest? @relation(fields: [leaveRequestId], references: [id])

  @@unique([employeeId, date])
}

model LeaveRequest {
  id         Int          @id @default(autoincrement())
  employee   Employee     @relation(fields: [employeeId], references: [id])
  employeeId Int
  reason     String
  status     String       @default("PENDING")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  leaveDates LeaveDate[]
  attendance Attendance[]
}

model LeaveDate {
  id             Int          @id @default(autoincrement())
  date           DateTime
  leaveRequest   LeaveRequest @relation(fields: [leaveRequestId], references: [id], onDelete: Cascade)
  leaveRequestId Int
}
