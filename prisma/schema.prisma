datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String          @id @default(uuid())
  username        String          @unique
  email           String          @unique
  password        String
  role            Role            @default(EMPLOYEE)
  name            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  employeeDetails EmployeeDetails?
  attendance      Attendance[]
  leaveRequests   LeaveRequest[]
  leaveBalance    LeaveBalance?
  resetToken      String?
  resetTokenExpiry DateTime?
  payslips        Payslip[]

  @@index([name])
  @@index([email])
  @@index([createdAt])
}

model EmployeeDetails {
  id                String    @id @default(uuid())
  employeeId        String    @unique
  employeeCode      String    @unique
  position          String
  department        String
  salary            Float
  bankAccountNumber String
  bankName          String
  taxId             String
  employmentType    String    @default("FULL_TIME")
  joinedAt          DateTime
  employee          User      @relation(fields: [employeeId], references: [id])

  @@index([department])
  @@index([position])
}

model Attendance {
  id          String           @id @default(uuid())
  date        DateTime
  status      AttendanceStatus @default(PRESENT)
  employeeId  String
  employee    User             @relation(fields: [employeeId], references: [id])
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@index([employeeId])
  @@index([date])
  @@unique([employeeId, date])
  @@index([status])
  @@index([employeeId, status, date])
}

model LeaveRequest {
  id          String       @id @default(uuid())
  employeeId  String
  employee    User         @relation(fields: [employeeId], references: [id])
  reason      String
  status      LeaveStatus  @default(PENDING)
  leaveType   LeaveType    @default(ANNUAL)
  leaveDates  LeaveDate[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([employeeId])
  @@index([status])
  @@index([createdAt])
}

model LeaveDate {
  id            String       @id @default(uuid())
  date          DateTime
  leaveRequest  LeaveRequest @relation(fields: [leaveRequestId], references: [id])
  leaveRequestId String

  @@index([date])
}

model LeaveBalance {
  id          String  @id @default(uuid())
  employeeId  String  @unique
  annual      Int     @default(18)
  sick        Int     @default(12)
  maternity   Int     @default(180)
  paternity   Int     @default(30)
  unpaid      Int     @default(0)
  employee    User    @relation(fields: [employeeId], references: [id])

  @@index([annual])
  @@index([sick])
}

model Payslip {
    id              String   @id @default(cuid())
    employeeId      String
    month           Int
    year            Int
    basicSalary     Float
    grossEarnings   Float
    totalDeductions Float
    netPayable      Float
    paidDays        Int
    lopDays         Int
    payDate         DateTime
    employee        User     @relation(fields: [employeeId], references: [id])

    @@unique([employeeId, month, year])
    @@index([month, year])
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  ON_LEAVE
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}

enum LeaveType {
  ANNUAL
  SICK
  MATERNITY
  PATERNITY
  UNPAID
}